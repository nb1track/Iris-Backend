# =======================================
# GCP SQL (POSTGRESQL) VERBINDUNG (Auto-Konfiguration)
# =======================================
spring.cloud.gcp.sql.instance-connection-name=iris-471710:europe-west6:iris-db-main
spring.cloud.gcp.sql.database-name=iris

spring.cloud.gcp.project-id=iris-471710

# Standard-Datenbank-Credentials (Wird von Umgebungsvariablen ï¿½berschrieben)
spring.datasource.username=postgres
# spring.datasource.password wird von Umgebungsvariable gesetzt
# spring.jpa.hibernate.ddl-auto=update

# =======================================
# GOOGLE CLOUD STORAGE
# =======================================
# KORREKTUR: Diese Property muss zu deinem GcsStorageService (@Value("${gcs.bucket.name}")) passen
# Du musst "GCS_BUCKET_NAME" als Umgebungsvariable in Cloud Run setzen
gcs.bucket.name=${GCS_BUCKET_NAME}

# =======================================
# GOOGLE APIS
# =======================================
# KORREKTUR: Diese Property hat gefehlt
# Du musst "GCP_MAPS_API_KEY" als Umgebungsvariable in Cloud Run setzen
gcp.maps.api-key=${GCP_MAPS_API_KEY}

# Generiertes SQL in der Konsole anzeigen
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# Weist Hibernate an, die Tabellen- und Spaltennamen exakt so zu verwenden, wie sie in den @Table und @Column Annotationen stehen.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Google Cloud Storage
gcs.bucket.photos.name=${GCS_BUCKET_PHOTOS_NAME}
gcs.bucket.profile-images.name=${GCS_BUCKET_PROFILE_IMAGES_NAME}

# Firebase (Wird von Umgebungsvariable gesetzt)
# firebase.service-account.file-path wird von Umgebungsvariable/Secret gesetzt}
server.port=${PORT:8080}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostGISDialect

